{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\berna\\\\Desktop\\\\ESTUDOS\\\\PROGRAMA\\xC7AO\\\\seidor\\\\frontend\\\\src\\\\components\\\\user\\\\UserCrud.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Main from '../template/Main';\nimport { post } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'users',\n  title: 'Usuários',\n  subtitle: 'Cadastro de usuários'\n};\nconst baseUrl = 'http://localhost:5000/users';\nconst initialState = {\n  user: {\n    name: '',\n    cpf: '',\n    salario: ''\n  },\n  list: []\n};\nexport default class UserCrud extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...initialState\n    };\n  }\n\n  componentWillMount() {\n    axios(baseUrl).then(resp => {\n      this.setState({\n        list: resp.data\n      });\n    });\n  }\n\n  clear() {\n    this.setState({\n      user: initialState.user\n    });\n  }\n\n  save() {\n    const user = this.state.user;\n    const method = user.id ? 'put' : 'post';\n    const url = user.id ? `${baseUrl}/${user.id}` : baseUrl;\n    axios[method](url, user).then(resp => {\n      const list = this.getUpdatedList(resp.data);\n      this.setState({\n        user: initialState.user,\n        list\n      });\n    });\n  }\n\n  getUpdatedList(user, add = true) {\n    const list = this.state.list.filter(u => u.id !== user.id);\n    if (add) list.unshift(user);\n    return list;\n  }\n\n  updateField(event) {\n    const user = { ...this.state.user\n    };\n    user[event.target.name] = event.target.value;\n    this.setState({\n      user\n    });\n  }\n\n  renderForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"name\",\n              value: this.state.user.name,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o nome...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"CPF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"cpf\",\n              value: this.state.user.cpf,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite seu CPF.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Sal\\xE1rio bruto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"salario\",\n              value: this.state.user.salario,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o seu sal\\xE1rio...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Desconto da previd\\xEAncia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"desconto\",\n              value: this.state.user.desconto,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o desconto da previd\\xEAncia...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"N\\xFAmero de dependentes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"dependentes\",\n              value: this.state.user.email,\n              onChange: e => this.updateField(e),\n              placeholder: \"Digite o numero de dependentes...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 d-flex justify-content-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: e => this.save(e),\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary ml-2\",\n            onClick: e => this.clear(e),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n  load(user) {\n    this.setState({\n      user\n    });\n  }\n\n  remove(user) {\n    axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n      const list = this.getUpdatedList(user, false);\n      this.setState({\n        list\n      });\n    });\n  }\n\n  renderTable() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sal\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Desconto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"N\\xFAmero de dependentes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Desconto IRPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.renderRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderRows() {\n    return this.state.list.map(user => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.cpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.salario\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.desconto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.dependentes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.descontoIrpf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning\",\n            onClick: () => this.load(user),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger ml-2\",\n            onClick: () => this.remove(user),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n      children: [this.renderForm(), this.renderTable()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this);\n  }\n\n} // const baseUrl = 'http://localhost:5000/users'\n// const initialState = {\n//     user: { name: '', email: '' },\n//     list: []\n// }\n// export default class UserCrud extends Component {\n//     state = { ...initialState }\n//     componentWillMount(){\n//         axios(baseUrl).then(resp => {\n//             this.setState({list: resp.data})\n//         })\n//     }\n//     clear() {\n//         this.setState({ user: initialState.user })\n//     }\n//     save() {\n//         const user = this.state.user\n//         const method = user.id ? 'put' : 'post'\n//         const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\n//         axios[method](url, user)\n//             .then(resp => {\n//                 const list = this.getUpdatedList(resp.data)\n//                 this.setState({ user: initialState.user, list })\n//             })\n//     }\n//     getUpdatedList(user, add = true) {\n//         const list = this.state.list.filter(u => u.id !== user.id)\n//         list.unshift(user)\n//         return list\n//     }\n//     updateField(event) {\n//         const user = { ...this.state.user }\n//         user[event.target.name] = event.target.value\n//         this.setState({ user })\n//     }\n//     renderForm() {\n//         return (\n//             <div className=\"form\">\n//                 <div className=\"row\">\n//                     <div className=\"col-12 col-md-6\">\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"\">Nome</label>\n//                             <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.user.name} onChange={e => this.updateField(e)} placeholder=\"Digite o nome\" />\n//                         </div>\n//                         <div className=\"col-12 col-md-6\">\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"\">E-mail</label>\n//                                 <input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.user.email} onChange={e => this.updateField(e)} placeholder=\"Digite o e-mail\" ></input>\n//                             </div>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <hr />\n//                 <div className=\"row\">\n//                     <div className=\"col-12 d-flex justify-content-end\">\n//                         <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\n//                             Salvar\n//                         </button>\n//                         <button className=\"btn btn-secodary ml-2\" onClick={e => this.clear(e)}>\n//                             Cancelar\n//                         </button>\n//                     </div>\n//                 </div>\n//             </div>\n//         )\n//     }\n//     load(user){\n//         this.setState({user})\n//     }\n//     remove(user){\n//         axios.delete(`${baseUrl}/${user.id}`).then(resp => {\n//             const list = this.getUpdatedList(user, false)\n//             this.setState({list})\n//         })\n//     }\n//     renderTable(){\n//         return (\n//             <table className=\"table mt-4\">\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>Nome</th>\n//                         <th>E-Mail</th>\n//                         <th>Ações</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                      {this.renderRows}\n//                 </tbody>\n//             </table>\n//         )\n//     }\n//     renderRows(){\n//         return this.state.list.map(user =>{\n//             return(\n//                 <tr key={user.id}>\n//                     <td>{user.id}</td>\n//                     <td>{user.name}</td>\n//                     <td>{user.email}</td>\n//                     <td>\n//                         <button className=\"btn btn-warning\" \n//                         onClick={() => this.load(user)}>\n//                             <i className=\"fa fa-pencil\"></i>\n//                         </button>\n//                         <button className=\"btn btn-danger ml-2\"\n//                         onClick={() => this.remove(user)}>\n//                             <i className=\"fa fa-trash\"></i>\n//                         </button>\n//                     </td>\n//                 </tr>\n//             )\n//         })\n//     }\n//     render() {\n//         return (\n//             <Main {...headerProps}>\n//                 {this.renderForm()}\n//                 {this.renderTable()}\n//                 {this.renderRows()}\n//             </Main>\n//         )\n//     }\n// }","map":{"version":3,"sources":["C:/Users/berna/Desktop/ESTUDOS/PROGRAMAÇAO/seidor/frontend/src/components/user/UserCrud.jsx"],"names":["React","Component","axios","Main","post","headerProps","icon","title","subtitle","baseUrl","initialState","user","name","cpf","salario","list","UserCrud","state","componentWillMount","then","resp","setState","data","clear","save","method","id","url","getUpdatedList","add","filter","u","unshift","updateField","event","target","value","renderForm","e","desconto","email","load","remove","delete","renderTable","renderRows","map","dependentes","descontoIrpf","render"],"mappings":"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":["\r\n\r\n\r\n\r\n import React, { Component } from 'react'\r\n import axios from 'axios'\r\n import Main from '../template/Main'\r\nimport { post } from 'react'\r\n\r\nconst headerProps = {\r\n     icon: 'users',\r\n     title: 'Usuários',\r\n    subtitle: 'Cadastro de usuários'\r\n }\r\n\r\n const baseUrl = 'http://localhost:5000/users'\r\nconst initialState = {\r\n    user: { name: '', cpf: '' , salario: '' },\r\n    list: []\r\n}\r\n\r\nexport default class UserCrud extends Component {\r\n\r\n    state = { ...initialState }\r\n\r\n    componentWillMount() {\r\n        axios(baseUrl).then(resp => {\r\n            this.setState({ list: resp.data })\r\n        })\r\n    }\r\n\r\n    clear() {\r\n        this.setState({ user: initialState.user })\r\n    }\r\n\r\n    save() {\r\n        const user = this.state.user\r\n        const method = user.id ? 'put' : 'post'\r\n        const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n        axios[method](url, user)\r\n            .then(resp => {\r\n                const list = this.getUpdatedList(resp.data)\r\n                this.setState({ user: initialState.user, list })\r\n            })\r\n    }\r\n\r\n    getUpdatedList(user, add = true) {\r\n        const list = this.state.list.filter(u => u.id !== user.id)\r\n        if(add) list.unshift(user)\r\n        return list\r\n    }\r\n\r\n    updateField(event) {\r\n        const user = { ...this.state.user }\r\n        user[event.target.name] = event.target.value\r\n        this.setState({ user })\r\n    }\r\n\r\n    renderForm() {\r\n        return (\r\n            <div className=\"form\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Nome</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={this.state.user.name}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o nome...\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>CPF</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"cpf\"\r\n                                value={this.state.user.cpf}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite seu CPF.\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Salário bruto</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"salario\"\r\n                                value={this.state.user.salario}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o seu salário...\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Desconto da previdência</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"desconto\"\r\n                                value={this.state.user.desconto}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o desconto da previdência...\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"col-12 col-md-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Número de dependentes</label>\r\n                            <input type=\"text\" className=\"form-control\"\r\n                                name=\"dependentes\"\r\n                                value={this.state.user.email}\r\n                                onChange={e => this.updateField(e)}\r\n                                placeholder=\"Digite o numero de dependentes...\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 d-flex justify-content-end\">\r\n                        <button className=\"btn btn-primary\"\r\n                            onClick={e => this.save(e)}>\r\n                            Salvar\r\n                        </button>\r\n\r\n                        <button className=\"btn btn-secondary ml-2\"\r\n                            onClick={e => this.clear(e)}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    load(user) {\r\n        this.setState({ user })\r\n    }\r\n\r\n    remove(user) {\r\n        axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n            const list = this.getUpdatedList(user, false)\r\n            this.setState({ list })\r\n        })\r\n    }\r\n\r\n    renderTable() {\r\n        return (\r\n            <table className=\"table mt-4\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nome</th>\r\n                        <th>CPF</th>\r\n                        <th>Salário</th>\r\n                        <th>Desconto</th>\r\n                        <th>Número de dependentes</th>\r\n                        <th>Desconto IRPF</th>\r\n                        <th>Ações</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderRows()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    renderRows() {\r\n        return this.state.list.map(user => {\r\n            return (\r\n                <tr key={user.id}>\r\n                    <td>{user.id}</td>\r\n                    <td>{user.name}</td>\r\n                    <td>{user.cpf}</td>\r\n                    <td>{user.salario}</td>\r\n                    <td>{user.desconto}</td>\r\n                    <td>{user.dependentes}</td>\r\n                    <td>{user.descontoIrpf}</td>\r\n                    <td>\r\n                        <button className=\"btn btn-warning\"\r\n                            onClick={() => this.load(user)}>\r\n                            <i className=\"fa fa-pencil\"></i>\r\n                        </button>\r\n                        <button className=\"btn btn-danger ml-2\"\r\n                            onClick={() => this.remove(user)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Main {...headerProps}>\r\n                {this.renderForm()}\r\n                {this.renderTable()}\r\n            </Main>\r\n        )\r\n    }\r\n}\r\n\r\n// const baseUrl = 'http://localhost:5000/users'\r\n// const initialState = {\r\n//     user: { name: '', email: '' },\r\n//     list: []\r\n// }\r\n\r\n\r\n\r\n// export default class UserCrud extends Component {\r\n\r\n//     state = { ...initialState }\r\n\r\n//     componentWillMount(){\r\n//         axios(baseUrl).then(resp => {\r\n//             this.setState({list: resp.data})\r\n//         })\r\n//     }\r\n\r\n//     clear() {\r\n//         this.setState({ user: initialState.user })\r\n//     }\r\n\r\n//     save() {\r\n//         const user = this.state.user\r\n//         const method = user.id ? 'put' : 'post'\r\n//         const url = user.id ? `${baseUrl}/${user.id}` : baseUrl\r\n//         axios[method](url, user)\r\n//             .then(resp => {\r\n//                 const list = this.getUpdatedList(resp.data)\r\n//                 this.setState({ user: initialState.user, list })\r\n//             })\r\n//     }\r\n//     getUpdatedList(user, add = true) {\r\n//         const list = this.state.list.filter(u => u.id !== user.id)\r\n//         list.unshift(user)\r\n//         return list\r\n//     }\r\n\r\n//     updateField(event) {\r\n//         const user = { ...this.state.user }\r\n//         user[event.target.name] = event.target.value\r\n//         this.setState({ user })\r\n//     }\r\n\r\n//     renderForm() {\r\n//         return (\r\n//             <div className=\"form\">\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-12 col-md-6\">\r\n//                         <div className=\"form-group\">\r\n//                             <label htmlFor=\"\">Nome</label>\r\n//                             <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.user.name} onChange={e => this.updateField(e)} placeholder=\"Digite o nome\" />\r\n\r\n\r\n//                         </div>\r\n\r\n//                         <div className=\"col-12 col-md-6\">\r\n//                             <div className=\"form-group\">\r\n//                                 <label htmlFor=\"\">E-mail</label>\r\n//                                 <input type=\"text\" className=\"form-control\" name=\"email\" value={this.state.user.email} onChange={e => this.updateField(e)} placeholder=\"Digite o e-mail\" ></input>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <hr />\r\n//                 <div className=\"row\">\r\n//                     <div className=\"col-12 d-flex justify-content-end\">\r\n//                         <button className=\"btn btn-primary\" onClick={e => this.save(e)}>\r\n//                             Salvar\r\n//                         </button>\r\n\r\n//                         <button className=\"btn btn-secodary ml-2\" onClick={e => this.clear(e)}>\r\n//                             Cancelar\r\n//                         </button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         )\r\n\r\n//     }\r\n\r\n//     load(user){\r\n//         this.setState({user})\r\n//     }\r\n\r\n//     remove(user){\r\n//         axios.delete(`${baseUrl}/${user.id}`).then(resp => {\r\n//             const list = this.getUpdatedList(user, false)\r\n//             this.setState({list})\r\n//         })\r\n//     }\r\n\r\n//     renderTable(){\r\n//         return (\r\n//             <table className=\"table mt-4\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>ID</th>\r\n//                         <th>Nome</th>\r\n//                         <th>E-Mail</th>\r\n//                         <th>Ações</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                      {this.renderRows}\r\n//                 </tbody>\r\n//             </table>\r\n//         )\r\n//     }\r\n\r\n//     renderRows(){\r\n//         return this.state.list.map(user =>{\r\n//             return(\r\n//                 <tr key={user.id}>\r\n//                     <td>{user.id}</td>\r\n//                     <td>{user.name}</td>\r\n//                     <td>{user.email}</td>\r\n//                     <td>\r\n//                         <button className=\"btn btn-warning\" \r\n//                         onClick={() => this.load(user)}>\r\n//                             <i className=\"fa fa-pencil\"></i>\r\n//                         </button>\r\n//                         <button className=\"btn btn-danger ml-2\"\r\n//                         onClick={() => this.remove(user)}>\r\n//                             <i className=\"fa fa-trash\"></i>\r\n//                         </button>\r\n//                     </td>\r\n//                 </tr>\r\n//             )\r\n//         })\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n//         return (\r\n//             <Main {...headerProps}>\r\n//                 {this.renderForm()}\r\n//                 {this.renderTable()}\r\n//                 {this.renderRows()}\r\n\r\n//             </Main>\r\n//         )\r\n//     }\r\n\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}